name: CI/CD .NET + Docker

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - run: dotnet restore
      - run: dotnet build --configuration Release --no-restore
      - run: dotnet format --verify-no-changes
        continue-on-error: true
      - run: dotnet test --configuration Release --no-build --verbosity normal

  docker-build-and-push:
    name: Build & Push Docker image
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build -t magasincentral-api .

      - name: Login to Docker Hub
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" \
            | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Tag & Push
        run: |
          docker tag magasincentral-api \
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/magasincentral-api:latest
          docker push docker.io/${{ secrets.DOCKERHUB_USERNAME }}/magasincentral-api:latest

  deploy:
    name: Deploy to VM via SSH
    needs: docker-build-and-push
    runs-on: self-hosted
    steps:
      - name: SSH & deploy to VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          password: ${{ secrets.VM_PASSWORD }}
          port: 22
          script: |
            set -e

            # clone the repo once (or reset on subsequent runs)
            if [ ! -d ~/magasincentral-etape2 ]; then
              git clone https://github.com/itsahmed98/log430-lab3-magasinMVC-api.git \
                ~/magasincentral-etape2
            fi

            cd ~/magasincentral-etape2
            git fetch --all
            git reset --hard origin/main

            # login to Docker Hub
            echo "${{ secrets.DOCKERHUB_TOKEN }}" \
              | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

            # tear down & rebuild fresh
            docker-compose down --remove-orphans
            docker rm -f magasincentral-api-db 2>/dev/null || true
            docker-compose pull
            docker-compose up -d --build --remove-orphans
