@model VenteCreateViewModel
@using Microsoft.AspNetCore.Mvc.Rendering

@{
    ViewData["Title"] = "Enregistrer une vente";
}

<h1>@ViewData["Title"]</h1>

<form asp-action="Enregistrer" method="post">
    <div class="form-group">
        <label asp-for="MagasinId"></label>
        <select asp-for="MagasinId" class="form-control"
                asp-items="(SelectList)ViewBag.Magasins">
            <option value="">-- Choisir un magasin --</option>
        </select>
        <span asp-validation-for="MagasinId" class="text-danger"></span>
    </div>

    <h3>Lignes de vente</h3>
    @for (int i = 0; i < Model.Lignes.Count; i++)
    {
        <div class="form-row">
            <div class="col">
                <label asp-for="@Model.Lignes[i].ProduitId"></label>
                <select asp-for="@Model.Lignes[i].ProduitId" class="form-control"
                        asp-items="(SelectList)ViewBag.Produits">
                    <option value="">-- Choisir un produit --</option>
                </select>
                <span asp-validation-for="@Model.Lignes[i].ProduitId" class="text-danger"></span>
            </div>
            <div class="col">
                <label asp-for="@Model.Lignes[i].Quantite"></label>
                <input asp-for="@Model.Lignes[i].Quantite" class="form-control" />
                <span asp-validation-for="@Model.Lignes[i].Quantite" class="text-danger"></span>
            </div>
        </div>
    }

    <button type="submit" class="btn btn-primary mt-3">Enregistrer</button>
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
